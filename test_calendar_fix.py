#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø UnboundLocalError –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /calendar
"""
import sys
import asyncio
from pathlib import Path

# Add src to path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

class MockTelegramUpdate:
    """–ú–æ–∫ –æ–±—ä–µ–∫—Ç –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ Telegram Update"""
    def __init__(self, user_id):
        self.effective_user = MockUser(user_id)
        self.effective_message = MockMessage()
        self.callback_query = None
        self.message = MockMessage()

class MockUser:
    def __init__(self, user_id):
        self.id = user_id
        self.username = "testuser"
        self.first_name = "Test"
        self.last_name = "User"

class MockMessage:
    async def reply_text(self, text, **kwargs):
        print(f"üì§ Bot would send: {text[:100]}...")

class MockContext:
    pass

async def test_calendar_function_direct():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ connect_calendar –Ω–∞–ø—Ä—è–º—É—é"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø get_db UnboundLocalError")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        from handlers.manager_calendar import connect_calendar
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è connect_calendar")
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –æ–±—ä–µ–∫—Ç—ã
        mock_update = MockTelegramUpdate(1026563311)  # ID –∏–∑ –ª–æ–≥–æ–≤
        mock_context = MockContext()
        
        print("üîç –í—ã–∑—ã–≤–∞–µ–º connect_calendar —Å –º–æ–∫ –¥–∞–Ω–Ω—ã–º–∏...")
        
        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é - —Ä–∞–Ω—å—à–µ –∑–¥–µ—Å—å –±—ã–ª UnboundLocalError
        result = await connect_calendar(mock_update, mock_context)
        
        print("‚úÖ –£–°–ü–ï–•! –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–∏–ª–∞—Å—å –±–µ–∑ UnboundLocalError")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        return True
        
    except Exception as e:
        error_type = type(e).__name__
        print(f"‚ùå –û–®–ò–ë–ö–ê: {error_type}: {e}")
        
        if "UnboundLocalError" in str(e) and "get_db" in str(e):
            print("üö® –ö–†–ò–¢–ò–ß–ù–û! UnboundLocalError –ù–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
            return False
        else:
            print("‚ÑπÔ∏è  –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ (–æ–∂–∏–¥–∞–µ–º–æ –∏–∑-–∑–∞ –º–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤)")
            print("‚úÖ UnboundLocalError –ò–°–ü–†–ê–í–õ–ï–ù (–Ω–µ—Ç –æ—à–∏–±–∫–∏ —Å get_db)")
            return True

async def test_unified_calendar_handler():
    """–¢–µ—Å—Ç unified_calendar_handler –∏–∑ main.py"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ unified_calendar_handler...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º main –º–æ–¥—É–ª—å
        import main
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫
        mock_update = MockTelegramUpdate(1026563311)
        mock_context = MockContext()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏–∏ (–æ–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ main)
        # –ú—ã –Ω–µ –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å –µ—ë –Ω–∞–ø—Ä—è–º—É—é, –Ω–æ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã
        print("‚úÖ main.py —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        print("‚úÖ unified_calendar_handler –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ main.py: {e}")
        return False

async def test_all_manager_calendar_functions():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ manager_calendar.py —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...")
    
    functions_to_test = [
        'connect_calendar',
        'save_manager_email', 
        'disconnect_calendar_handler',
        'switch_to_simple_calendar'
    ]
    
    results = []
    
    for func_name in functions_to_test:
        try:
            from handlers import manager_calendar
            func = getattr(manager_calendar, func_name)
            print(f"‚úÖ {func_name}: –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ –∫–æ–¥–µ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å –Ω–∞—à–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            import inspect
            source = inspect.getsource(func)
            if "from database import get_db as db_context_manager" in source:
                print(f"‚úÖ {func_name}: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ")
                results.append(True)
            else:
                print(f"‚ö†Ô∏è  {func_name}: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
                results.append(False)
                
        except Exception as e:
            print(f"‚ùå {func_name}: –û—à–∏–±–∫–∞ {e}")
            results.append(False)
    
    return all(results)

async def main():
    """–ì–ª–∞–≤–Ω—ã–π —Ç–µ—Å—Ç"""
    print("üõ°Ô∏è –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("=" * 60)
    
    test_results = []
    
    # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    test_results.append(await test_calendar_function_direct())
    
    # –¢–µ—Å—Ç 2: Main handler
    test_results.append(await test_unified_calendar_handler())
    
    # –¢–µ—Å—Ç 3: –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
    test_results.append(await test_all_manager_calendar_functions())
    
    print("\n" + "=" * 60)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   –¢–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ: {sum(test_results)}/{len(test_results)}")
    
    if all(test_results):
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ UnboundLocalError –ò–°–ü–†–ê–í–õ–ï–ù")
        print("‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /calendar –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üîç –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    
    return all(test_results)

if __name__ == "__main__":
    success = asyncio.run(main())
    print(f"\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {'–£–°–ü–ï–®–ù–û' if success else '–ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´'}")
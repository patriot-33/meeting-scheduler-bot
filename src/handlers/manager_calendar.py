"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Google Calendar —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º–∏
"""
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from database import get_db, User, UserRole
from utils.decorators import require_registration
from config import settings

logger = logging.getLogger(__name__)

@require_registration
async def connect_calendar(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Google Calendar –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π."""
    user_id = update.effective_user.id
    
    with get_db() as db:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        
        if user.role != UserRole.MANAGER:
            await update.message.reply_text(
                "‚ùå –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º –æ—Ç–¥–µ–ª–æ–≤."
            )
            return
    
    instructions = """
üìÖ **–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Google Calendar**

–î–ª—è —É—á–∞—Å—Ç–∏—è –≤–æ –≤—Å—Ç—Ä–µ—á–∞—Ö —á–µ—Ä–µ–∑ Google Meet –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:

1Ô∏è‚É£ **–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å Google –∞–∫–∫–∞—É–Ω—Ç**
   ‚Ä¢ –ï—Å–ª–∏ –Ω–µ—Ç - —Å–æ–∑–¥–∞–π—Ç–µ –Ω–∞ google.com
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ—á—Ç—É, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ

2Ô∏è‚É£ **–°–æ–æ–±—â–∏—Ç–µ —Å–≤–æ–π email –≤–ª–∞–¥–µ–ª—å—Ü—É –±–∏–∑–Ω–µ—Å–∞**
   ‚Ä¢ –í–ª–∞–¥–µ–ª–µ—Ü –¥–æ–±–∞–≤–∏—Ç –≤–∞—Å –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤—Å—Ç—Ä–µ—á–∏
   ‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É

3Ô∏è‚É£ **–ü—Ä–∏–º–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É**
   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∏—Å—å–º–æ –æ—Ç Google Calendar
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–î–∞, —è –ø—Ä–∏–¥—É"
   ‚Ä¢ –í—Å—Ç—Ä–µ—á–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ

4Ô∏è‚É£ **–ó–∞ —á–∞—Å –¥–æ –≤—Å—Ç—Ä–µ—á–∏**
   ‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ –±–æ—Ç–µ
   ‚Ä¢ –í –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ Google Meet
   ‚Ä¢ –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

üí° **–°–æ–≤–µ—Ç—ã:**
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Google Calendar –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω
‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –∏ –∫–∞–º–µ—Ä—ã –∑–∞—Ä–∞–Ω–µ–µ
‚Ä¢ –ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞

‚ùì **–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã?**
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤–ª–∞–¥–µ–ª—å—Ü—É –±–∏–∑–Ω–µ—Å–∞ –∏–ª–∏ IT-–æ—Ç–¥–µ–ª—É.
"""
    
    keyboard = [
        [InlineKeyboardButton("üìß –°–æ–æ–±—â–∏—Ç—å email –≤–ª–∞–¥–µ–ª—å—Ü—É", callback_data="send_email_to_owner")],
        [InlineKeyboardButton("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="calendar_faq")],
        [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="nav_main_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        instructions, 
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def handle_calendar_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è."""
    query = update.callback_query
    await query.answer()
    
    if query.data == "send_email_to_owner":
        await send_email_prompt(update, context)
    elif query.data == "calendar_faq":
        await show_calendar_faq(update, context)

async def send_email_prompt(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–ø—Ä–æ—Å email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü—É."""
    text = """
üìß **–û—Ç–ø—Ä–∞–≤–∫–∞ email –≤–ª–∞–¥–µ–ª—å—Ü—É**

–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Google email –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
`–≤–∞—à–µ_–∏–º—è@gmail.com` –∏–ª–∏ `–≤–∞—à–µ_–∏–º—è@–∫–æ–º–ø–∞–Ω–∏—è.ru`

–í–ª–∞–¥–µ–ª–µ—Ü –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–∏—Ç –≤–∞—Å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å.

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:
`/email –≤–∞—à_email@gmail.com`
"""
    
    keyboard = [[InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="connect_calendar")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def save_manager_email(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å email –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ —É–≤–µ–¥–æ–º–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞."""
    if not context.args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ email –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n"
            "–ü—Ä–∏–º–µ—Ä: `/email john.doe@gmail.com`",
            parse_mode='Markdown'
        )
        return
    
    email = context.args[0]
    
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ email
    if '@' not in email or '.' not in email.split('@')[1]:
        await update.message.reply_text(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email.\n"
            "–ü—Ä–∏–º–µ—Ä: `john.doe@gmail.com`",
            parse_mode='Markdown'
        )
        return
    
    user_id = update.effective_user.id
    
    with get_db() as db:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        
        if not user or user.role != UserRole.MANAGER:
            await update.message.reply_text("‚ùå –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º.")
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º email
        user.email = email
        db.commit()
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
        owners = db.query(User).filter(User.role == UserRole.OWNER).all()
        
        notification_text = f"""
üìß **–ù–æ–≤—ã–π email —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è**

üë§ {user.first_name} {user.last_name}
üè¢ –û—Ç–¥–µ–ª: {user.department.value}
üìß Email: {email}

–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Calendar.
–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç email –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤–æ –≤—Å—Ç—Ä–µ—á–∞—Ö.
"""
        
        for owner in owners:
            try:
                await context.bot.send_message(
                    chat_id=owner.telegram_id,
                    text=notification_text,
                    parse_mode='Markdown'
                )
            except Exception as e:
                logger.error(f"Failed to notify owner {owner.id}: {e}")
    
    await update.message.reply_text(
        f"‚úÖ Email —Å–æ—Ö—Ä–∞–Ω–µ–Ω: `{email}`\n\n"
        f"–í–ª–∞–¥–µ–ª—å—Ü—ã –ø–æ–ª—É—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤—è—Ç –≤–∞—Å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å.\n"
        f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ—á—Ç—É.",
        parse_mode='Markdown'
    )

async def show_calendar_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—é."""
    faq_text = """
‚ùì **–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ Google Calendar**

**Q: –ù—É–∂–µ–Ω –ª–∏ –ø–ª–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Google?**
A: –ù–µ—Ç, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Gmail.

**Q: –ú–æ–≥—É –ª–∏ —è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ—á—Ç—É?**
A: –î–∞, –µ—Å–ª–∏ –æ–Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ Google Workspace.

**Q: –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å email?**
A: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/email –Ω–æ–≤—ã–π_email@gmail.com`

**Q: –ù–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ**
A: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º" –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å email.

**Q: –ú–æ–∂–Ω–æ –ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞?**
A: –î–∞, —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Google Meet –∏–ª–∏ –±—Ä–∞—É–∑–µ—Ä.

**Q: –ù—É–∂–Ω–∞ –ª–∏ –∫–∞–º–µ—Ä–∞ –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏?**
A: –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –ú–æ–∂–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º.

**Q: –ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ –≤–æ –≤—Å—Ç—Ä–µ—á–µ?**
A: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/my_meetings` –∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –≤—Å—Ç—Ä–µ—á—É.

**Q: –í—Å—Ç—Ä–µ—á–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ**
A: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–Ω—è–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –ø–∏—Å—å–º–µ.
"""
    
    keyboard = [[InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="connect_calendar")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.callback_query.edit_message_text(
        faq_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )
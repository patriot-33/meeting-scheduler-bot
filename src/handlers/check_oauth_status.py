"""
Handler –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ OAuth –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""
import logging
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
from sqlalchemy.orm import Session
from database import SessionLocal, User
from config import settings

logger = logging.getLogger(__name__)

async def check_oauth_status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ OAuth –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ owner."""
    user_id = update.effective_user.id
    
    logger.info(f"üîç Checking OAuth status for user {user_id}")
    
    with SessionLocal() as session:
        user = session.query(User).filter_by(user_id=user_id).first()
        
        if not user:
            await update.message.reply_text("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å owner
        is_owner = user_id in settings.admin_ids_list
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ —Å—Ç–∞—Ç—É—Å–µ
        status_message = f"""
üîê **–°—Ç–∞—Ç—É—Å OAuth –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è**

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.name} (@{user.username})
üÜî ID: {user.user_id}
üëî –†–æ–ª—å: {'–í–ª–∞–¥–µ–ª–µ—Ü' if is_owner else '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å' if user.is_manager else '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}

üìß **Email:** {user.email or '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω'}
üîó **OAuth —Å—Ç–∞—Ç—É—Å:** {'‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω' if user.oauth_credentials else '‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
üìÖ **Google Calendar ID:** {user.google_calendar_id or '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω'}
üóìÔ∏è **–ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω:** {'‚úÖ –î–∞' if user.calendar_connected else '‚ùå –ù–µ—Ç'}

"""

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        if not user.oauth_credentials and not user.google_calendar_id:
            status_message += """
‚ö†Ô∏è **–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞:**

–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:

1Ô∏è‚É£ **OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è** (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø):
   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /connect_google

2Ô∏è‚É£ **Service Account** (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /calendar_instructions –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
   ‚Ä¢ –ó–∞—Ç–µ–º /setcalendar –í–ê–®_CALENDAR_ID
"""
        elif user.google_calendar_id and not user.oauth_credentials:
            status_message += """
‚úÖ **–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Service Account**
–≠—Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.
"""
        elif user.oauth_credentials and not user.google_calendar_id:
            status_message += """
‚ö†Ô∏è **OAuth –ø–æ–¥–∫–ª—é—á–µ–Ω, –Ω–æ –Ω–µ —É–∫–∞–∑–∞–Ω Calendar ID**
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setcalendar –í–ê–®_CALENDAR_ID
"""
        else:
            status_message += """
‚úÖ **–ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!**
–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.
"""
            
        # –î–ª—è owner –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        if is_owner:
            manager_count = session.query(User).filter_by(is_manager=True).count()
            connected_count = session.query(User).filter(
                User.is_manager == True,
                (User.calendar_connected == True) | (User.oauth_credentials != None)
            ).count()
            
            status_message += f"""

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã (–¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞):**
‚Ä¢ –í—Å–µ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π: {manager_count}
‚Ä¢ –ü–æ–¥–∫–ª—é—á–∏–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏: {connected_count}
‚Ä¢ –ë–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {manager_count - connected_count}
"""
            
        await update.message.reply_text(status_message, parse_mode='Markdown')

def create_check_oauth_handler():
    """–°–æ–∑–¥–∞–µ—Ç handler –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ OAuth —Å—Ç–∞—Ç—É—Å–∞."""
    return CommandHandler('check_oauth', check_oauth_status)
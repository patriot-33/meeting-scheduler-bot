from telegram import Update
from telegram.ext import ContextTypes
import logging

from src.database import get_db, User, UserRole
from src.config import settings

logger = logging.getLogger(__name__)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /start command."""
    user_id = update.effective_user.id
    
    with get_db() as db:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        
        if not user:
            await update.message.reply_text(
                "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á.\n\n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n"
                "–ù–∞–∂–º–∏—Ç–µ /register –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
            )
        elif user.role == UserRole.PENDING:
            await update.message.reply_text(
                "‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–∂–∏–¥–∞–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
            )
        else:
            welcome_text = f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
            
            if user.role == UserRole.ADMIN:
                welcome_text += (
                    "üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:\n"
                    "/admin - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n"
                    "/pending - –û–∂–∏–¥–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n"
                    "/users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                    "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
                )
            
            welcome_text += (
                "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "/schedule - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã\n"
                "/my_meetings - –ú–æ–∏ –≤—Å—Ç—Ä–µ—á–∏\n"
                "/vacation - –û—Ç–º–µ—Ç–∏—Ç—å –æ—Ç–ø—É—Å–∫\n"
                "/profile - –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
                "/help - –ü–æ–º–æ—â—å"
            )
            
            await update.message.reply_text(welcome_text)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /help command."""
    help_text = (
        "ü§ñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É\n\n"
        "üìÖ **–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á:**\n"
        "/schedule - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã\n"
        "/my_meetings - –ú–æ–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏\n\n"
        "üë§ **–°—Ç–∞—Ç—É—Å:**\n"
        "/vacation - –û—Ç–º–µ—Ç–∏—Ç—å –æ—Ç–ø—É—Å–∫\n"
        "/sick - –û—Ç–º–µ—Ç–∏—Ç—å –±–æ–ª—å–Ω–∏—á–Ω—ã–π\n"
        "/trip - –û—Ç–º–µ—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫—É\n"
        "/active - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∞—Ç—É—Å\n\n"
        "üë§ **–ü—Ä–æ—Ñ–∏–ª—å:**\n"
        "/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n\n"
        "üìù **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**\n"
        "‚Ä¢ –í—Å—Ç—Ä–µ—á–∏ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ä–∞–∑ –≤ 2 –Ω–µ–¥–µ–ª–∏\n"
        "‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Å—ã: 11:00, 14:00, 15:00, 16:00, 17:00\n"
        "‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 60 –º–∏–Ω—É—Ç\n"
        "‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    )
    
    await update.message.reply_text(help_text, parse_mode='Markdown')

async def cancel_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /cancel command."""
    await update.message.reply_text(
        "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    )

async def handle_navigation_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle navigation callbacks."""
    query = update.callback_query
    await query.answer()
    
    if query.data == "nav_back":
        await query.edit_message_text("‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥...")
        # Add navigation logic here
    elif query.data == "nav_main":
        await start_command(update, context)
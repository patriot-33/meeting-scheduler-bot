"""
Simple calendar integration for managers using Calendar ID sharing.
No OAuth required - managers just share their calendar with service account.
"""
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from database import get_db, User, UserRole
from utils.decorators import require_registration
from services.google_calendar import google_calendar_service as calendar_service
from config import settings

logger = logging.getLogger(__name__)

@require_registration
async def simple_calendar_connect(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —á–µ—Ä–µ–∑ Calendar ID.
    –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É –∫ —Å–≤–æ–µ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é.
    """
    user_id = update.effective_user.id
    
    with get_db() as db:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        
        if user.role != UserRole.MANAGER:
            await update.message.reply_text(
                "‚ùå –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º –æ—Ç–¥–µ–ª–æ–≤."
            )
            return
        
        # Get service account email
        service_account_email = calendar_service.get_service_account_email()
        
        if not service_account_email:
            await update.message.reply_text(
                "‚ùå –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
            return
    
    instructions = f"""
üóìÔ∏è **–ü—Ä–æ—Å—Ç–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Google Calendar**

–í–∞–º –Ω–µ –Ω—É–∂–µ–Ω OAuth! –ü—Ä–æ—Å—Ç–æ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º:

1Ô∏è‚É£ **–û—Ç–∫—Ä–æ–π—Ç–µ Google Calendar**
   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://calendar.google.com
   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –≤–∞—à —Ä–∞–±–æ—á–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å

2Ô∏è‚É£ **–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º —Å –±–æ—Ç–æ–º**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ 3 —Ç–æ—á–∫–∏ —Ä—è–¥–æ–º —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–±—â–∏–π –¥–æ—Å—Ç—É–ø"
   ‚Ä¢ –í —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø" –¥–æ–±–∞–≤—å—Ç–µ:
   
   üìß `{service_account_email}`
   
   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: **"–í–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"**
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"

3Ô∏è‚É£ **–°–∫–æ–ø–∏—Ä—É–π—Ç–µ ID –∫–∞–ª–µ–Ω–¥–∞—Ä—è**
   ‚Ä¢ –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–∞–π–¥–∏—Ç–µ "ID –∫–∞–ª–µ–Ω–¥–∞—Ä—è"
   ‚Ä¢ –í—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫: `your.email@gmail.com` –∏–ª–∏ `abc123...@group.calendar.google.com`

4Ô∏è‚É£ **–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –±–æ—Ç—É**
   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:
   `/setcalendar –í–ê–®_CALENDAR_ID`

‚úÖ **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –ù–µ —Ç—Ä–µ–±—É–µ—Ç OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
‚Ä¢ –í—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç–µ –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ Google Calendar
‚Ä¢ –ú–æ–∂–µ—Ç–µ –æ—Ç–æ–∑–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è–º–∏

üîí **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**
‚Ä¢ –ë–æ—Ç –ø–æ–ª—É—á–∏—Ç –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é
‚Ä¢ –ù–∏–∫–∞–∫–∏—Ö –ø–∞—Ä–æ–ª–µ–π –∏–ª–∏ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –Ω–∞ —á—Ç–µ–Ω–∏–µ
"""
    
    keyboard = [
        [InlineKeyboardButton("üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å email –±–æ—Ç–∞", callback_data=f"copy_service_email:{service_account_email}")],
        [InlineKeyboardButton("üì∫ –í–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://support.google.com/calendar/answer/37082")],
        [InlineKeyboardButton("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="simple_calendar_faq")],
        [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="nav_main_menu")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        instructions, 
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

@require_registration  
async def set_calendar_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Calendar ID –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è."""
    if not context.args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ Calendar ID –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n"
            "–ü—Ä–∏–º–µ—Ä: `/setcalendar your.email@gmail.com`",
            parse_mode='Markdown'
        )
        return
    
    calendar_id = context.args[0].strip()
    user_id = update.effective_user.id
    
    # BULLETPROOF –≤–∞–ª–∏–¥–∞—Ü–∏—è calendar_id
    import re
    from html import escape
    
    # Sanitize input
    calendar_id = escape(calendar_id)
    
    # Validate format (email-like structure)
    email_pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    if not re.match(email_pattern, calendar_id):
        await update.message.reply_text(
            "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Calendar ID**\n\n"
            "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n"
            "‚Ä¢ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º email\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, —Ç–æ—á–∫–∏, –¥–µ—Ñ–∏—Å—ã\n"
            "‚Ä¢ –ü—Ä–∏–º–µ—Ä: `your.email@gmail.com`\n"
            "‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 320 —Å–∏–º–≤–æ–ª–æ–≤",
            parse_mode='Markdown'
        )
        return
    
    # Additional security checks
    if len(calendar_id) > 320:  # RFC 5321 limit
        await update.message.reply_text("‚ùå Calendar ID —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 320 —Å–∏–º–≤–æ–ª–æ–≤)")
        return
        
    # Prevent common attack vectors
    dangerous_patterns = [
        r'[<>"\']',  # HTML/JS injection
        r'[;|&`$()]',  # Command injection
        r'\.\./',  # Path traversal
        r'script|javascript|vbscript',  # Script injection
    ]
    
    for pattern in dangerous_patterns:
        if re.search(pattern, calendar_id, re.IGNORECASE):
            await update.message.reply_text("‚ùå Calendar ID —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã")
            return
    
    # BULLETPROOF: –ê—Ç–æ–º–∞—Ä–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    with get_db() as db:
        try:
            # Start transaction
            user = db.query(User).filter(User.telegram_id == user_id).first()
            
            if not user or user.role != UserRole.MANAGER:
                await update.message.reply_text("‚ùå –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º.")
                return
            
            # Check for conflicts with existing OAuth setup
            if user.oauth_credentials:
                await update.message.reply_text(
                    "‚ö†Ô∏è **–ö–æ–Ω—Ñ–ª–∏–∫—Ç –º–µ—Ç–æ–¥–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è**\n\n"
                    "–í–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ OAuth.\n"
                    "–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥:\n\n"
                    "1. –û—Ç–∫–ª—é—á–∏—Ç–µ OAuth: `/disconnect_calendar`\n"
                    "2. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `/setcalendar`",
                    parse_mode='Markdown'
                )
                return
            
            # Check if calendar already used by another user
            existing_user = db.query(User).filter(
                User.google_calendar_id == calendar_id,
                User.telegram_id != user_id
            ).first()
            
            if existing_user:
                await update.message.reply_text(
                    f"‚ùå **Calendar ID —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è**\n\n"
                    f"–≠—Ç–æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\n"
                    f"–ö–∞–∂–¥—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω —Ç–æ–ª—å–∫–æ –∫ –æ–¥–Ω–æ–º—É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é."
                )
                return
            
            # Test calendar access BEFORE saving
            test_result = calendar_service.test_calendar_access(calendar_id)
            
            if test_result['success']:
                # ATOMIC UPDATE: –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                user.google_calendar_id = calendar_id
                user.calendar_connected = True
                user.oauth_credentials = None  # Clear OAuth if was set
                
                # Commit transaction
                db.commit()
                
                await update.message.reply_text(
                    f"‚úÖ **–ö–∞–ª–µ–Ω–¥–∞—Ä—å —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!**\n\n"
                    f"üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: `{test_result.get('summary', calendar_id)}`\n"
                    f"üé® –¶–≤–µ—Ç: {test_result.get('backgroundColor', '—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π')}\n"
                    f"üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {test_result.get('timeZone', settings.timezone)}\n\n"
                    f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                    f"‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á–∏: /schedule\n"
                    f"‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á–∏: /my_meetings\n"
                    f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å: /calendar_status",
                    parse_mode='Markdown'
                )
            else:
                error_msg = test_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                
                if 'not found' in error_msg.lower():
                    await update.message.reply_text(
                        f"‚ùå **–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –Ω–∞–π–¥–µ–Ω**\n\n"
                        f"–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:\n"
                        f"1. –í—ã –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º —Å:\n`{calendar_service.get_service_account_email()}`\n"
                        f"2. Calendar ID —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ: `{calendar_id}`\n"
                        f"3. –†–∞–∑—Ä–µ—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ '–í–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'",
                        parse_mode='Markdown'
                    )
                else:
                    await update.message.reply_text(
                        f"‚ùå **–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é**\n\n{error_msg}",
                        parse_mode='Markdown'
                    )
        
        except Exception as e:
            # BULLETPROOF: Single exception handler with proper rollback
            try:
                db.rollback()
            except Exception as rollback_error:
                logger.error(f"Rollback failed: {rollback_error}")
            
            logger.error(f"Database error during calendar setup: {e}")
            await update.message.reply_text(
                "‚ùå **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è**\n\n"
                "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω—ã.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )

async def simple_calendar_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """FAQ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è."""
    faq_text = """
‚ùì **–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã - –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ**

**Q: –ì–¥–µ –Ω–∞–π—Ç–∏ Calendar ID?**
A: Google Calendar ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è ‚Üí —Ä–∞–∑–¥–µ–ª "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"

**Q: –ö–∞–∫–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–∞–≤–∞—Ç—å –±–æ—Ç—É?**
A: "–í–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á –∏–ª–∏ "–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å" –¥–ª—è —á—Ç–µ–Ω–∏—è

**Q: –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å?**
A: –î–∞, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞

**Q: –ö–∞–∫ –æ—Ç–æ–∑–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø?**
A: Google Calendar ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –£–¥–∞–ª–∏—Ç–µ email –±–æ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–∞

**Q: –ë–æ—Ç –≤–∏–¥–∏—Ç –≤—Å–µ –º–æ–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏?**
A: –ù–µ—Ç, —Ç–æ–ª—å–∫–æ —Ç–æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã –¥–∞–ª–∏ –¥–æ—Å—Ç—É–ø

**Q: –ú–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π?**
A: –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ - —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å

**Q: –û—à–∏–±–∫–∞ "Calendar not found"?**
A: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –∏ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID

**Q: –ù—É–∂–µ–Ω –ª–∏ Google Workspace?**
A: –ù–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ–±—ã—á–Ω—ã–º Gmail –∞–∫–∫–∞—É–Ω—Ç–æ–º
"""
    
    keyboard = [[InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="simple_calendar")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.callback_query.edit_message_text(
        faq_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

@require_registration
async def disconnect_calendar(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è."""
    user_id = update.effective_user.id
    
    with get_db() as db:
        try:
            user = db.query(User).filter(User.telegram_id == user_id).first()
            
            if not user or user.role != UserRole.MANAGER:
                await update.message.reply_text("‚ùå –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º.")
                return
            
            if not user.google_calendar_id and not user.oauth_credentials:
                await update.message.reply_text("‚ÑπÔ∏è –ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω.")
                return
            
            # Clear all calendar connections
            connection_type = "OAuth" if user.oauth_credentials else "Simple"
            user.google_calendar_id = None
            user.oauth_credentials = None
            user.calendar_connected = False
            
            db.commit()
            
            await update.message.reply_text(
                f"‚úÖ **–ö–∞–ª–µ–Ω–¥–∞—Ä—å –æ—Ç–∫–ª—é—á–µ–Ω**\n\n"
                f"–ú–µ—Ç–æ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {connection_type}\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–Ω–æ–≤–æ:\n\n"
                f"‚Ä¢ –ü—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥: `/calendar_simple`\n"
                f"‚Ä¢ OAuth –º–µ—Ç–æ–¥: `/calendar`",
                parse_mode='Markdown'
            )
            
        except Exception as e:
            db.rollback()
            logger.error(f"Error disconnecting calendar: {e}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è.")
#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –¥–ª—è Telegram –±–æ—Ç–∞
"""
import os
import sys
import requests
from dotenv import load_dotenv

load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "https://meeting-scheduler-bot-fkp8.onrender.com")
WEBHOOK_PATH = os.getenv("WEBHOOK_PATH", "/webhook")

if not BOT_TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    sys.exit(1)

# Telegram API URL
API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

def get_webhook_info():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook"""
    response = requests.get(f"{API_URL}/getWebhookInfo")
    return response.json()

def delete_webhook():
    """–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π webhook"""
    response = requests.get(f"{API_URL}/deleteWebhook")
    return response.json()

def set_webhook(url):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π webhook"""
    response = requests.get(f"{API_URL}/setWebhook", params={"url": url})
    return response.json()

def get_updates():
    """–ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–¥–ª—è —Ä–µ–∂–∏–º–∞ polling)"""
    response = requests.get(f"{API_URL}/getUpdates")
    return response.json()

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook –Ω–∞—Å—Ç—Ä–æ–µ–∫...\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
    webhook_info = get_webhook_info()
    
    if webhook_info.get("ok"):
        result = webhook_info.get("result", {})
        current_url = result.get("url", "")
        
        print(f"üìå –¢–µ–∫—É—â–∏–π webhook URL: {current_url or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ pending updates: {result.get('pending_update_count', 0)}")
        
        if result.get("last_error_message"):
            print(f"‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {result.get('last_error_message')}")
            print(f"   –í—Ä–µ–º—è –æ—à–∏–±–∫–∏: {result.get('last_error_date')}")
        
        if result.get("has_custom_certificate"):
            print("üîí –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Å—Ç–æ–º–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook")
        print(webhook_info)
    
    # –û–ø—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüìã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook –¥–ª—è Render.com")
    print("2. –£–¥–∞–ª–∏—Ç—å webhook (–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ polling)")
    print("3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    print("4. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook")
    print("5. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-5): ")
    
    if choice == "1":
        full_webhook_url = f"{WEBHOOK_URL}{WEBHOOK_PATH}"
        print(f"\nüîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {full_webhook_url}")
        result = set_webhook(full_webhook_url)
        if result.get("ok"):
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result}")
    
    elif choice == "2":
        print("\nüîÑ –£–¥–∞–ª—è–µ–º webhook...")
        result = delete_webhook()
        if result.get("ok"):
            print("‚úÖ Webhook —É–¥–∞–ª–µ–Ω! –ë–æ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –≤ —Ä–µ–∂–∏–º polling.")
            print("‚ÑπÔ∏è  –î–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–µ–∂–∏–º–µ polling –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –ª–æ–∫–∞–ª—å–Ω–æ.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {result}")
    
    elif choice == "3":
        print("\nüîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
        updates = get_updates()
        if updates.get("ok"):
            update_list = updates.get("result", [])
            print(f"üì® –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(update_list)}")
            if update_list:
                print("\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
                for update in update_list[-5:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
                    message = update.get("message", {})
                    if message:
                        print(f"- –û—Ç: {message.get('from', {}).get('username', 'Unknown')}")
                        print(f"  –¢–µ–∫—Å—Ç: {message.get('text', '')}")
                        print(f"  ID: {update.get('update_id')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {updates}")
    
    elif choice == "4":
        print("\nüîÑ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook...")
        # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º
        delete_result = delete_webhook()
        if delete_result.get("ok"):
            print("‚úÖ –°—Ç–∞—Ä—ã–π webhook —É–¥–∞–ª–µ–Ω")
            
            # –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π
            full_webhook_url = f"{WEBHOOK_URL}{WEBHOOK_PATH}"
            print(f"üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook: {full_webhook_url}")
            result = set_webhook(full_webhook_url)
            if result.get("ok"):
                print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {delete_result}")

if __name__ == "__main__":
    main()
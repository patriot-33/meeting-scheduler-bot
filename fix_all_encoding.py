#!/usr/bin/env python3
"""Fix encoding issues in all Python files."""

import os
import re
from pathlib import Path

def fix_corrupted_text(text):
    """Fix corrupted Cyrillic text."""
    # Common replacements for corrupted Cyrillic
    replacements = {
        '>7\rB\x0f # 20A =5B 70?;0=8@>20==KE 2AB@5G': 'üìÖ –£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á',
        '06<8B5 /schedule 4;O =07=0G5=8O =>2>9 2AB@5G8': '–ù–∞–∂–º–∏—Ç–µ /schedule –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏',
        '=ÔøΩ 0H8 70?;0=8@>20==K5 2AB@5G8': 'üìÖ –í–∞—à–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏',
        '=ÔøΩ @>A@>G5==K5 2AB@5G8': '‚è∞ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏',
        '!;54CNI85 @C:>2>48B5;8 =5 =07=0G8;8 2-=545;L=CN 2AB@5GC': '–°–ª–µ–¥—É—é—â–∏–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ 2-–Ω–µ–¥–µ–ª—å–Ω—É—é –≤—Å—Ç—Ä–µ—á—É',
        '>60;C9AB0, A2O68B5AL A =8<8 4;O =07=0G5=8O 2AB@5G8': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∏–º–∏ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏',
        '=K @825B': '–ü—Ä–∏–≤–µ—Ç',
        '=ÔøΩ 4<8=8AB@0B>@': 'üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        '=ÔøΩ A=>2=K5 :><0=4K': 'üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã',
        '>A<>B@5BL 4>ABC?=K5 A;>BK': '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã',
        '>8 2AB@5G8': '–ú–æ–∏ –≤—Å—Ç—Ä–µ—á–∏',
        'B<5B8BL >B?CA:': '–û—Ç–º–µ—Ç–∏—Ç—å –æ—Ç–ø—É—Å–∫',
        '>9 ?@>D8;L': '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
        '><>IL': '–ü–æ–º–æ—â—å',
        '> ><>IL ?> 1>BC': 'ü§ñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É',
        '=ÔøΩ **;0=8@>20=85 2AB@5G:**': 'üìÖ **–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á:**',
        '>:070BL 4>ABC?=K5 A;>BK': '–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã',
        '>8 70?;0=8@>20==K5 2AB@5G8': '–ú–æ–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏',
        '<4 **!B0BCA:**': 'üë§ **–°—Ç–∞—Ç—É—Å:**',
        'B<5B8BL >B?CA:': '–û—Ç–º–µ—Ç–∏—Ç—å –æ—Ç–ø—É—Å–∫',
        'B<5B8BL 1>;L=8G=K9': '–û—Ç–º–µ—Ç–∏—Ç—å –±–æ–ª—å–Ω–∏—á–Ω—ã–π',
        '4<8=-?0=5;L': '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å',
        '6840NI85 ?>;L7>20B5;8': '–û–∂–∏–¥–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
        '!?8A>: ?>;L7>20B5;59': '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        '!B0B8AB8:0': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        '9 0H0 70O2:0 >68405B >4>1@5=8O 04<8=8AB@0B>@><': '‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–∂–∏–¥–∞–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º',
        ";O =0G0;0 @01>BK =5>1E>48<> 70@538AB@8@>20BLAO": '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
        "@>4068": '–ü—Ä–æ–¥–∞–∂–∏',
        "0@:5B8=3": '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
        " 07@01>B:0": '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        "$8=0=AK": '–§–∏–Ω–∞–Ω—Å—ã',
        ">?5@0F88": '–û–ø–µ—Ä–∞—Ü–∏–∏',
        ">38AB8:0": '–õ–æ–≥–∏—Å—Ç–∏–∫–∞',
        ">445@6:0": '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
        " 0:B82=K9": '–ê–∫—Ç–∏–≤–Ω—ã–π',
        "<4 >B?CA:": '–í –æ—Ç–ø—É—Å–∫–µ',
        "> 1>;L=8G=K9": '–ù–∞ –±–æ–ª—å–Ω–∏—á–Ω–æ–º',
        " :><0=48@>2:0": '–í –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–µ',
    }
    
    for corrupted, fixed in replacements.items():
        text = text.replace(corrupted, fixed)
    
    return text

def fix_file(filepath):
    """Fix encoding issues in a single file."""
    try:
        # Read file content
        with open(filepath, 'r', encoding='utf-8', errors='replace') as f:
            content = f.read()
        
        # Check if file has issues
        original_content = content
        
        # Fix corrupted text
        content = fix_corrupted_text(content)
        
        # Remove special characters
        content = content.replace('\r', '')
        content = re.sub(r'[\x00-\x08\x0b-\x0c\x0e-\x1f\x7f-\x9f]', '', content)
        
        if content != original_content:
            # Write fixed content back
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"‚úÖ Fixed: {filepath}")
            return True
        else:
            print(f"‚úì No issues: {filepath}")
            return False
    except Exception as e:
        print(f"‚ùå Error fixing {filepath}: {e}")
        return False

def main():
    """Fix all Python files in the project."""
    print("üîç Scanning for files with encoding issues...\n")
    
    fixed_count = 0
    total_count = 0
    
    # Find all Python files
    for root, dirs, files in os.walk('src'):
        for file in files:
            if file.endswith('.py'):
                filepath = os.path.join(root, file)
                total_count += 1
                if fix_file(filepath):
                    fixed_count += 1
    
    print(f"\nüìä Summary:")
    print(f"Total files checked: {total_count}")
    print(f"Files fixed: {fixed_count}")
    
    if fixed_count > 0:
        print("\n‚úÖ All encoding issues have been fixed!")
    else:
        print("\n‚úÖ No encoding issues found!")

if __name__ == "__main__":
    main()
#!/usr/bin/env python3
"""
üö® –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–±–ª–µ–º–∞ "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º" –≤ –∫–æ–º–∞–Ω–¥–µ /calendar
"""

import sys
import os
import json
import logging
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s'
)
logger = logging.getLogger(__name__)

def test_oauth_environment():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è OAuth"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê OAUTH –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ OAuth –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    oauth_vars = {
        'GOOGLE_OAUTH_CLIENT_JSON': 'OAuth Client JSON –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤',
        'GOOGLE_OAUTH_CLIENT_FILE': 'OAuth Client File –ø—É—Ç—å',
        'GOOGLE_OAUTH_CLIENT_ID': 'Public OAuth Client ID',
        'WEBHOOK_URL': 'Webhook URL –¥–ª—è redirect'
    }
    
    results = {}
    
    for var_name, description in oauth_vars.items():
        value = os.getenv(var_name)
        if value:
            if 'JSON' in var_name:
                try:
                    parsed = json.loads(value)
                    print(f"‚úÖ {var_name}: –í–∞–ª–∏–¥–Ω—ã–π JSON")
                    if 'web' in parsed:
                        client_id = parsed['web'].get('client_id', '–ù–ï –ù–ê–ô–î–ï–ù')
                        client_secret = parsed['web'].get('client_secret', '–ù–ï –ù–ê–ô–î–ï–ù')
                        redirect_uris = parsed['web'].get('redirect_uris', [])
                        
                        print(f"   üìã Client ID: {client_id[:30]}...")
                        print(f"   üîê Client Secret: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if client_secret != '–ù–ï –ù–ê–ô–î–ï–ù' else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
                        print(f"   üîó Redirect URIs: {redirect_uris}")
                        
                        results[var_name] = {
                            'status': 'valid',
                            'client_id': client_id,
                            'has_secret': client_secret != '–ù–ï –ù–ê–ô–î–ï–ù',
                            'redirect_uris': redirect_uris
                        }
                    else:
                        print(f"‚ùå {var_name}: JSON –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'web'")
                        results[var_name] = {'status': 'invalid', 'error': 'Missing web section'}
                except json.JSONDecodeError as e:
                    print(f"‚ùå {var_name}: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON - {e}")
                    results[var_name] = {'status': 'invalid', 'error': f'JSON error: {e}'}
            elif var_name == 'WEBHOOK_URL':
                print(f"‚úÖ {var_name}: {value}")
                results[var_name] = {'status': 'valid', 'value': value}
            else:
                print(f"‚úÖ {var_name}: {value}")
                results[var_name] = {'status': 'valid', 'value': value}
        else:
            print(f"‚ùå {var_name}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê ({description})")
            results[var_name] = {'status': 'missing'}
    
    return results

def test_oauth_service_initialization():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OAuth Service"""
    print(f"\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï OAUTH SERVICE")
    print("="*60)
    
    try:
        from services.oauth_service import oauth_service
        
        print(f"üì¶ OAuth Service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: ‚úÖ")
        print(f"üîß is_oauth_configured: {oauth_service.is_oauth_configured}")
        
        if hasattr(oauth_service, 'client_config'):
            print(f"‚öôÔ∏è client_config —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {'‚úÖ' if oauth_service.client_config else '‚ùå'}")
            if oauth_service.client_config:
                print(f"   - Type: {type(oauth_service.client_config)}")
        
        if hasattr(oauth_service, 'redirect_uri'):
            print(f"üîó redirect_uri: {getattr(oauth_service, 'redirect_uri', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é URL
        if oauth_service.is_oauth_configured:
            try:
                test_url = oauth_service.generate_auth_url(12345)
                if test_url:
                    print(f"‚úÖ URL –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    print(f"   Sample URL: {test_url[:100]}...")
                    return True
                else:
                    print(f"‚ùå URL –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ None")
                    return False
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL: {type(e).__name__}: {e}")
                return False
        else:
            print(f"‚ùå OAuth –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - URL –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞")
            return False
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ oauth_service: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        return False

def test_manager_calendar_handler():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ manager_calendar"""
    print(f"\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï MANAGER CALENDAR HANDLER")
    print("="*60)
    
    try:
        from handlers.manager_calendar import connect_calendar
        print(f"üì¶ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ connect_calendar –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: ‚úÖ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ callable
        if callable(connect_calendar):
            print(f"üîß connect_calendar –≤—ã–∑—ã–≤–∞–µ–º–∞—è: ‚úÖ")
        else:
            print(f"‚ùå connect_calendar –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º–∞—è")
            
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ connect_calendar: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        return False

def simulate_oauth_flow():
    """–°–∏–º—É–ª—è—Ü–∏—è OAuth flow –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º"""
    print(f"\nüîÑ –°–ò–ú–£–õ–Ø–¶–ò–Ø OAUTH FLOW")
    print("="*60)
    
    try:
        from config import settings
        
        # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        if not settings.google_oauth_client_json:
            print("‚ùå GOOGLE_OAUTH_CLIENT_JSON –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return False
        
        # –®–∞–≥ 2: –ü–∞—Ä—Å–∏–Ω–≥ JSON
        print("–®–∞–≥ 2: –ü–∞—Ä—Å–∏–Ω–≥ OAuth JSON...")
        try:
            oauth_config = json.loads(settings.google_oauth_client_json)
            print("‚úÖ OAuth JSON –ø–∞—Ä—Å–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ OAuth JSON: {e}")
            return False
        
        # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        print("–®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã JSON...")
        required_fields = ['client_id', 'client_secret', 'auth_uri', 'token_uri']
        web_config = oauth_config.get('web', {})
        
        missing_fields = []
        for field in required_fields:
            if not web_config.get(field):
                missing_fields.append(field)
        
        if missing_fields:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing_fields}")
            return False
        else:
            print("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ redirect URI
        print("–®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ redirect URI...")
        redirect_uris = web_config.get('redirect_uris', [])
        webhook_url = settings.webhook_url
        
        if not webhook_url:
            print("‚ùå WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return False
        
        expected_redirect = f"{webhook_url}/oauth/callback"
        if expected_redirect in redirect_uris:
            print(f"‚úÖ Redirect URI –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: {expected_redirect}")
        else:
            print(f"‚ùå Redirect URI –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
            print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è: {expected_redirect}")
            print(f"   –ù–∞–π–¥–µ–Ω–æ: {redirect_uris}")
            return False
        
        # –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth Service
        print("–®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth Service...")
        from services.oauth_service import oauth_service
        
        if not oauth_service.is_oauth_configured:
            print("‚ùå OAuth Service –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ OAuth flow –ø—Ä–æ–π–¥–µ–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏ OAuth flow: {type(e).__name__}: {e}")
        import traceback
        print(f"Traceback: {traceback.format_exc()}")
        return False

def main():
    print("üö® DEBUG: –ö–æ–º–∞–Ω–¥–∞ /calendar –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç '–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º'")
    print(f"üïê –í—Ä–µ–º—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {datetime.now()}")
    print("="*80)
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    results = {
        'environment': test_oauth_environment(),
        'oauth_service': test_oauth_service_initialization(),
        'handler': test_manager_calendar_handler(),
        'oauth_flow': simulate_oauth_flow()
    }
    
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –û–¢–ß–ï–¢")
    print("="*80)
    
    # –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    success_count = sum(1 for result in results.values() if result is True)
    
    print(f"Environment Variables: {'‚úÖ PASS' if isinstance(results['environment'], dict) else '‚ùå FAIL'}")
    print(f"OAuth Service Init: {'‚úÖ PASS' if results['oauth_service'] else '‚ùå FAIL'}")
    print(f"Handler Import: {'‚úÖ PASS' if results['handler'] else '‚ùå FAIL'}")
    print(f"OAuth Flow Simulation: {'‚úÖ PASS' if results['oauth_flow'] else '‚ùå FAIL'}")
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/4 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
    
    if not results['oauth_service']:
        print("1. ‚ùå OAuth Service –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ GOOGLE_OAUTH_CLIENT_JSON –Ω–∞ Render.com")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ JSON –≤–∞–ª–∏–¥–Ω—ã–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç 'web' —Å–µ–∫—Ü–∏—é")
    
    if not results['oauth_flow']:
        print("2. ‚ùå OAuth Flow –Ω–µ–ø–æ–ª–Ω—ã–π")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ redirect URI –≤ Google Cloud Console")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ WEBHOOK_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    if success_count == 4:
        print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Google Cloud Console")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OAuth Consent Screen")
    
    print("\n" + "="*80)

if __name__ == "__main__":
    main()
#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø—Ä–æ–±–ª–µ–º —Å Google Meet –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º –≤—Å—Ç—Ä–µ—á.
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API.
"""

import sys
import os
import logging

# –î–æ–±–∞–≤–∏—Ç—å src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

# –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_config_changes():
    """–¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        from config import settings
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ google_calendar_force_attendee_free —Ç–µ–ø–µ—Ä—å False –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        logger.info(f"google_calendar_force_attendee_free = {settings.google_calendar_force_attendee_free}")
        
        if settings.google_calendar_force_attendee_free == False:
            logger.info("‚úÖ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø: Google Meet –≤–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            return True
        else:
            logger.error("‚ùå –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø: Google Meet –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_dual_calendar_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ DualCalendarCreator"""
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ DualCalendarCreator...")
        from services.google_calendar_dual import DualCalendarCreator
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(DualCalendarCreator, 'delete_meeting_from_both_calendars'):
            logger.info("‚úÖ DUAL CALENDAR: –ú–µ—Ç–æ–¥ delete_meeting_from_both_calendars –Ω–∞–π–¥–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—É –º–µ—Ç–æ–¥–∞
            import inspect
            sig = inspect.signature(DualCalendarCreator.delete_meeting_from_both_calendars)
            logger.info(f"üìã –°–∏–≥–Ω–∞—Ç—É—Ä–∞ –º–µ—Ç–æ–¥–∞: {sig}")
            
            return True
        else:
            logger.error("‚ùå DUAL CALENDAR: –ú–µ—Ç–æ–¥ delete_meeting_from_both_calendars –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ DualCalendarCreator: {e}")
        return False

def test_meeting_service_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ MeetingService"""
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ MeetingService...")
        
        # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å (–º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å –∏–∑-–∑–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ë–î)
        try:
            from services.meeting_service import MeetingService
            logger.info("‚úÖ MEETING SERVICE: –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
            return True
        except ImportError as e:
            if "database" in str(e).lower() or "sqlalchemy" in str(e).lower():
                logger.info("‚ö†Ô∏è MEETING SERVICE: –ò–º–ø–æ—Ä—Ç —É–ø–∞–ª –∏–∑-–∑–∞ –ë–î (—ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ)")
                return True
            else:
                logger.error(f"‚ùå MEETING SERVICE: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
                return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ MeetingService: {e}")
        return False

def test_google_meet_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ Google Meet –≤ DualCalendarCreator"""
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ Google Meet...")
        from services.google_calendar_dual import DualCalendarCreator
        from datetime import datetime
        
        # –°–æ–∑–¥–∞—Ç—å mock –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
        class MockCalendarService:
            def __init__(self):
                self._service = None
        
        creator = DualCalendarCreator(MockCalendarService())
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(creator, 'create_meeting_in_both_calendars'):
            logger.info("‚úÖ GOOGLE MEET: –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á –Ω–∞–π–¥–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if hasattr(creator, 'delete_meeting_from_both_calendars'):
                logger.info("‚úÖ GOOGLE MEET: –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á –Ω–∞–π–¥–µ–Ω")
                return True
            else:
                logger.error("‚ùå GOOGLE MEET: –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        else:
            logger.error("‚ùå GOOGLE MEET: –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –ª–æ–≥–∏–∫–∏ Google Meet: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    tests = [
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", test_config_changes),
        ("DualCalendarCreator", test_dual_calendar_imports),
        ("MeetingService", test_meeting_service_imports),
        ("–õ–æ–≥–∏–∫–∞ Google Meet", test_google_meet_logic),
    ]
    
    results = []
    for test_name, test_func in tests:
        logger.info(f"\n{'='*50}")
        logger.info(f"–¢–µ—Å—Ç: {test_name}")
        logger.info(f"{'='*50}")
        
        result = test_func()
        results.append((test_name, result))
        
        if result:
            logger.info(f"‚úÖ {test_name}: –£–°–ü–ï–•")
        else:
            logger.error(f"‚ùå {test_name}: –ù–ï–£–î–ê–ß–ê")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    logger.info(f"\n{'='*50}")
    logger.info("–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    logger.info(f"{'='*50}")
    
    passed = sum(1 for _, result in results if result)
    total = len(results)
    
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ù–ï –ü–†–û–ô–î–ï–ù"
        logger.info(f"{test_name}: {status}")
    
    logger.info(f"\n–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {total}")
    logger.info(f"–ü—Ä–æ–π–¥–µ–Ω–æ: {passed}")
    logger.info(f"–ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ: {total - passed}")
    
    if passed == total:
        logger.info("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
        return True
    else:
        logger.error("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)